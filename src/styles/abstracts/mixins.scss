@use 'variables' as *;
@use 'sass:map';

@mixin mq($key) {
  $size: map.get($break-points, $key);

  @media (min-width: $size) {
    @content;
  }
}

@mixin theme-transition {
  transition-property: color, background-color, border-color, fill, stroke, box-shadow;
  transition-duration: $theme-transition-time;
  transition-timing-function: $theme-transition-timing-function;
}

@mixin flex-center {
  display: flex;
  justify-content: center;
  align-items: center;
}

@mixin clickable-element {
  cursor: pointer;
  user-select: none;
  outline: none;
  border: none;
}

@mixin chess-board {
  background-image:
          linear-gradient(45deg, darken($board-color-light, 10%) 25%, transparent 25%),
          linear-gradient(-45deg, darken($board-color-light, 10%) 25%, transparent 25%),
          linear-gradient(45deg, transparent 75%, darken($board-color-light, 10%) 75%),
          linear-gradient(-45deg, transparent 75%, darken($board-color-light, 10%) 75%);
  background-size: 10px 10px;
  background-position: 0 0, 0 5px, 5px -5px, -5px 0px;
}

@mixin oval-button ($inverse: false, $width: null, $height: 52px) {
  @include theme-transition;
  @include clickable-element;
  @include flex-center;
  position: relative;
  font-size: 16px;
  line-height: 20px;
  font-family: $font-main-semi-bold;
  text-transform: capitalize;
  color: var(--surface-color);
  background-color: var(--primary-color);
  border-radius: 300px;
  padding: 0 30px;
  overflow: hidden;
  transition:
    scale $hover-transition-time ease-in-out,
    color $theme-transition-time ease-out,
    background-color $theme-transition-time ease-out;
  z-index: 1;

  &::before {
    content: '';
    position: absolute;
    inset: 0;
    border-radius: 300px;
    background-color: var(--primary-hover);
    transform: scaleY(0);
    transform-origin: bottom;
    transition: transform $hover-transition-time ease-in-out;
    z-index: -1;

    @if $inverse {
      background-color: var(--secondary-hover);
    }
  }

  svg {
    @include theme-transition;
    stroke: var(--primary-color);
    fill: var(--primary-color);
  }

  @if $width {
    width: $width;
  }

  @if $height {
    height: $height;
  }

  @if $inverse {
    color: var(--primary-color);
    background-color: var(--secondary-color);
  }

  &:hover {
    scale: 1.15;

    &:before {
      transform: scaleY(1);
    }
  }

  &:active {
    scale: 0.95;
    background-color: var(--primary-active);

    @if $inverse {
      background-color: var(--secondary-active);
    }
  }

  &:disabled {
    pointer-events: none;
    cursor: not-allowed;
    color: var(--primary-disabled-content);
    background-color: var(--primary-disabled);

    svg {
      stroke: var(--primary-disabled-content);
      fill: var(--primary-disabled-content);
    }

    @if $inverse {
      color: var(--secondary-disabled-content);
      background-color: var(--secondary-disabled);

      svg {
        stroke: var(--secondary-disabled-content);
        fill: var(--secondary-disabled-content);
      }
    }
  }
}

@mixin oval-button-danger ($width: null, $height: 52px) {
  @include oval-button ($inverse: false, $width: $width, $height: $height);
  color: var(--error-content);
  background-color: var(--error-color);

  &::before {
    background-color: var(--error-hover);
  }

  svg {
    stroke: var(--error-content);
    fill: var(--error-content);
  }

  &:active {
    background-color: var(--error-active);
  }

  &:disabled {
    color: var(--error-disabled-content);
    background-color: var(--error-disabled);

    svg {
      stroke: var(--error-disabled-content);
      fill: var(--error-disabled-content);
    }
  }
}

@mixin oval-input ($width: null, $height: 52px) {
  @include theme-transition;
  padding: 16px 24px;
  font-size: 16px;
  font-family: $font-main-semi-bold;
  line-height: 20px;
  color: var(--text-color);
  background-color: var(--surface-color);
  border: 2px solid var(--border-color);
  border-radius: 300px;
  outline: none;

  &::placeholder {
    color: $placeholder-color;
  }

  @if $width {
    width: $width;
  }

  @if $height {
    height: $height;
  }

  &:focus {
    border: 2px solid var(--primary-color);
    transition: $hover-transition-time;
  }
}
